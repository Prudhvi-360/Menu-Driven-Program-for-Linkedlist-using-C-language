#include<stdio.h>
#include<stdlib.h>
struct Node
{
	int data;
	struct Node*next;
};
struct Node*head=NULL;

void main ()  
{  
    int choice =0;  
    while(choice != 10)   
    {  
        printf("\n\n*********Main Menu*********\n");  
        printf("\nChoose any one choice from the given menu\n");  
        printf("\n===============================================\n");  
        printf("\n1.Insert in begining\n2.Insert at last\n3.Insert at any random location\n4.Delete from Beginning\n5.Delete from last\n6.Delete node after specified location\n7.Number of nodes\n8.Display\n9.Exit\n");  
        printf("\nEnter your choice:\n");         
        scanf("\n%d",&choice);  
        switch(choice)  
        {  
            case 1:  
            insertatb();      
            break;  
            case 2:  
            insertatend();         
            break;
			case 3:
			insertatpos();
			break;
			case 4:
			deleteatb();
			break;
			case 5:
			deleteatend();
			break;
			case 6:
			deleteatpos();
			break; 
            case 7:  
            count();       
            break;
			case 8:
			Rev();
			break;  
            case 9:  
            display();       
            break; 
            case 10:  
            exit(0);  
            break;  
            default:  
            printf("Please enter valid choice");  
        }  
    }  
}  
int insertatb()
{		
	int d;
	struct Node*temp;
	temp=malloc(sizeof(struct Node));
	printf("Enter the number to be inserted at Beginning: ");
	scanf("%d",&d);
	if(head==NULL)
	{
		temp->data=d;
		temp->next=NULL;
		head=temp;
	}
	else
	{
		temp->data=d;
		temp->next=head;
		head=temp;
	}
}
int insertatend()
{
	int d;
	struct Node*temp1;
	struct Node*temp=malloc(sizeof(struct Node));
	printf("Enter number to be inserted at End:\n");
	scanf("%d",&d);
	temp->data=d;
	if(head==NULL)
	{
		temp->next=NULL;
		head=temp;
	}
	else
	{
		temp1=head;
		while(temp1->next!=NULL)
		{
		temp1=temp1->next;
		}
		temp1->next=temp;
		temp->next=NULL;
	}	
}
int insertatpos()
{
	int d,n,i;
	printf("Enter the position you want to insert the node:\n");
	scanf("%d",&n);
	printf("Enter the number you want to insert:\n");
	scanf("%d",&d);
	struct Node*temp1;
	temp1=head;
	struct Node*temp;
	temp=malloc(sizeof(struct Node));
	temp->data=d;
	if(head==NULL)
	{
		temp->next=NULL;
		head=temp;
	}
	else if(n==1)
	{
		temp->data=d;
		temp->next=head;
		head=temp;
	}
	else
	{
		for(i=0;i<n-2;i++)
		{
			temp1=temp1->next;
		}
		temp->next=temp1->next;
		temp1->next=temp;
	}
}
int deleteatb()
{
	struct Node*temp;
	if(head==NULL)
	{
		printf("Empty List");
	}
	else
	{
		temp=head;
		head=temp->next;
		temp->next=NULL;
	}
}
int deleteatend()
{
	struct Node*temp;
	struct Node*ptr;
	temp=head;
	ptr=head;
	while(temp->next!=NULL)
	{
		ptr=temp;		
		temp=temp->next;
	}
	ptr->next=NULL;
	free(temp);
	temp=NULL;	
}
int deleteatpos()
{
	int n,i=1;
	printf("Enter the pos you want to delete:\n");
	scanf("%d",&n);
	struct Node*temp;
	struct Node*ptr;
	ptr=head;
	temp=head;
	while(i!=n)
	{
		ptr=temp;
		temp=temp->next;
		i++;
	}
	ptr->next=temp->next;
	temp->next=NULL;
	free(temp);	
}
int count()
{
	struct Node*ptr;
	ptr=head;
	int c=0;
	if(head==NULL)
	{
		printf("0");
	}
	else
	{
		while(ptr!=NULL)
		{
			ptr=ptr->next;
			c++;
		}
		printf("\nNumber of elements present in the Linkedlist are..: %d .. ",c);
	}
}
int Rev()
{
	struct Node *next,*cur,*prev;
	if(head==NULL)
	{
		printf("List is empty");
	}
	else
	{
		prev=NULL;
		cur=head;
		while(cur!=NULL)
		{
			next=cur->next;
			cur->next=prev;
			prev=cur;
			cur=next;
		}
		head=prev;
	}
}
int display()
{
	struct Node*temp;
	temp=head;
	if(temp==NULL)
	{
		printf("Linkedlist is empty");
	}
	else
	{
		while(temp!=NULL)
		{
			printf("%d  ",temp->data);
			temp=temp->next;
		}
	}
}

